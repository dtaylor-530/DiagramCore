<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ConnectionCore"
                    xmlns:common="clr-namespace:ConnectionCore.Common"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:ac="clr-namespace:AdornedControl;assembly=AdornedControl"
                    xmlns:oxy="http://oxyplot.org/wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ConnectionCore;component/Themes/PointControl.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    
    <!-- Converter -->
    <local:PointToConnectionPointConverter x:Key="PointToConnectionPoint"></local:PointToConnectionPointConverter>
    <common:BooleanToThicknessConverter x:Key="BooleanToThicknessConverter"></common:BooleanToThicknessConverter>
    <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></common:BooleanToVisibilityConverter>
    <!-- 
            Template for the button that is used to delete nodes and connections in the graph.
            This button is displayed in an adorner when the user hovers the mouse over a node or connection.
            -->
    <ControlTemplate x:Key="deleteButtonTemplate"
                             TargetType="{x:Type Button}">
        <Grid
                    x:Name="grid"
                    >
            <Grid.RenderTransform>
                <ScaleTransform
                            ScaleX="1"
                            ScaleY="1"
                            CenterX="10"
                            CenterY="10"
                            />
            </Grid.RenderTransform>
            <Ellipse
                        x:Name="shadow"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Fill="Gray"
                        >
                <Ellipse.RenderTransform>
                    <TranslateTransform
                                X="1.5"
                                Y="1.5"
                                />
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse
                        x:Name="ellipse"
                        Stroke="Black"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Fill="White"/>
            <Image
                        Source="Resources\scissors.png" 
                        Margin="2"/>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger
                        RoutedEvent="Mouse.MouseEnter">
                <!-- 
                        Make the 'delete connection button' larger when the mouse 
                        cursor is hovered over it.
                        -->
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleX"
                                    To="1.3"
                                    Duration="0:0:0.25"
                                    />
                        <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleY"
                                    To="1.3"
                                    Duration="0:0:0.25"
                                    />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger
                        RoutedEvent="Mouse.MouseLeave"
                        >
                <!-- 
                        Return the 'delete connection button' to normal size when the mouse
                        cursor is moved away.
                        -->
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleX"
                                    To="1"
                                    Duration="0:0:0.05"
                                    />
                        <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleY"
                                    To="1"
                                    Duration="0:0:0.05"
                                    />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <DataTemplate DataType="{x:Type local:ConnectionNodeViewModel}">
        <StackPanel>
            <TextBlock Width="100" Height="30" Text="{Binding Mean}"></TextBlock>
            <TextBlock Width="100" Height="30" Text="{Binding StandardDeviation}"></TextBlock>
            <ToggleButton x:Name="Toggle1" Height="30" Width="100" >
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="Content" Value="Data"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="Chart" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Grid Visibility="{Binding ElementName=Toggle1, Path=IsChecked,  Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}">
                <!--<DataGrid ItemsSource="{Binding Values}" />-->
                <ListView Margin="10" ItemsSource="{Binding Values}" >

                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="X" Width="50" DisplayMemberBinding="{Binding X}" />
                            <GridViewColumn Header="Y" Width="50" DisplayMemberBinding="{Binding Y}" />
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
            <Grid Visibility="{Binding ElementName=Toggle1, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}" Width="160" Height="100">

                <oxy:Plot >
                    <oxy:Plot.Series>
                        <oxy:ScatterSeries ItemsSource="{Binding Values}" DataFieldY="Y" DataFieldX="X">
                            
                        </oxy:ScatterSeries>
                    </oxy:Plot.Series>
                </oxy:Plot>
            </Grid>

        </StackPanel>
     
    </DataTemplate>
    
    
    
    <Style  TargetType="{x:Type local:PathPolyLine}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PathPolyLine}">
                    <Polyline     Name="PolyLine"  
                                  Stroke="Gray"
                                  StrokeThickness="{Binding Thickness,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}"
                                  Points="{Binding ConnectionPoints,Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style  TargetType="{x:Type local:ConnectionsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
     
        <Setter Property="ClipToBounds" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                    </Canvas>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate >
                    <Canvas>
               
                        
                        <!--<ac:AdornedControl HorizontalAdornerPlacement="Inside" VerticalAdornerPlacement="Inside"-->
                        
             
                   
                            <!--    HorizontalAdornerPlacement="Mouse" VerticalAdornerPlacement="Mouse"
                    IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}"-->
                            <local:PathPolyLine Thickness="{Binding BiDirectional, Mode=OneWay, Converter={StaticResource BooleanToThicknessConverter}}" >
                                <local:PathPolyLine.StartPoint>
                                    <MultiBinding Converter="{StaticResource PointToConnectionPoint}">
                                        <Binding Path="X1" />
                                        <Binding Path="Y1" />
                                    </MultiBinding>
                                </local:PathPolyLine.StartPoint>
                                <local:PathPolyLine.EndPoint>
                                    <MultiBinding Converter="{StaticResource PointToConnectionPoint}">
                                        <Binding Path="X2" />
                                        <Binding Path="Y2" />
                                    </MultiBinding>
                                </local:PathPolyLine.EndPoint>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding SelectCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            <i:Interaction.Behaviors>
                                <local:AdornerBehavior Command="{Binding SelectCommand}"></local:AdornerBehavior>
                            </i:Interaction.Behaviors>
                        </local:PathPolyLine>


                            <!--<ac:AdornedControl.AdornerContent>
                                <Ellipse Fill="Blue" Width="10" Height="10"></Ellipse>
                                --><!-- 
                        This is the adorner that pops up when the user hovers the mouse over the connection.
                        It displays a button that the user can click to delete the connection.
                        --><!--
                                <Canvas
                            x:Name="connectionAdornerCanvas"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Width="30"
                            Height="30"
                                Margin="-100"    
                            >
                     
                                    <Line
                                X1="0"
                                Y1="30"
                                X2="15"
                                Y2="15"
                                Stroke="Black"
                                StrokeThickness="1"
                                />
                                    <Button
                                x:Name="deleteConnectionButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Cursor="Hand"
                                Focusable="False"
                              
                                CommandParameter="{Binding}"
                                Template="{StaticResource deleteButtonTemplate}"
                                />
                                    Command="{StaticResource Commands.DeleteConnection}"
                                </Canvas>--><!--
                            </ac:AdornedControl.AdornerContent>-->
                        <!--</ac:AdornedControl>-->

                        <local:PointControl Point="{Binding Point1, Mode=OneWay}" Delay="{Binding Delay,Mode=OneWay}"/>
                        <local:PointControl Point="{Binding Point2, Mode=OneWay}" Delay="{Binding Delay,Mode=OneWay}"/>

                    </Canvas>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>