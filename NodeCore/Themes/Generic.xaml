<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:math="http://hexinnovation.com/math"
                  xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                    xmlns:local="clr-namespace:NodeCore"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:numeric="http://gu.se/NumericInput">



    <ControlTemplate x:Key="MoveTemplate">
        <Grid>
            <Ellipse  Fill="SlateGray"></Ellipse>
            <Ellipse Margin="4"  Fill="White"></Ellipse>

   
                <Path Fill="Black" Stretch="Uniform" Margin="5"
                    Data="M13,11H18L16.5,9.5L17.92,8.08L21.84,12L17.92,15.92L16.5,14.5L18,13H13V18L14.5,16.5L15.92,17.92L12,21.84L8.08,17.92L9.5,16.5L11,18V13H6L7.5,14.5L6.08,15.92L2.16,12L6.08,8.08L7.5,9.5L6,11H11V6L9.5,7.5L8.08,6.08L12,2.16L15.92,6.08L14.5,7.5L13,6V11Z" />
      
            <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Medium">Node</TextBlock>-->

        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="ReSizeTemplate">
        <Grid >
            <Ellipse   Fill="SlateGray"></Ellipse>
            <Ellipse Margin="4"   Fill="White"></Ellipse>

            <Grid Margin="5"  >
                <Path Fill="Black" Stretch="Uniform" 
       
                Data="M492,0H344.212c-11.046,0-20,8.954-20,20s8.954,20,20,20h99.503L283.394,200.322c-7.811,7.811-7.811,20.474,0,28.284
			c7.81,7.81,20.473,7.811,28.284,0L472,68.284v99.503c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20V20
			C512,9.115,503.154,0,492,0z"/>
       
                <Path Fill="Black" Stretch="Uniform" 
       Data="M228.606,283.394c-7.811-7.81-20.474-7.811-28.284,0L40,443.716v-99.503c0-11.046-8.954-20-20-20s-20,8.954-20,20V492
			c0,10.866,8.853,20,20,20h147.788c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H68.284l160.322-160.322
			C236.417,303.867,236.417,291.204,228.606,283.394z"/>

                <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Medium">Node</TextBlock>-->
            </Grid>
        </Grid>
    </ControlTemplate>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <math:MathConverter x:Key="math" />


    <Style  TargetType="local:NodesControl" BasedOn="{StaticResource {x:Type ItemsControl}}">

        <Setter Property="ClipToBounds" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas  IsItemsHost="True"
                           >
                        <!--<Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="" CenterX=".5" CenterY=".5" />
                            </TransformGroup>
                        </Canvas.RenderTransform>-->
                    </Canvas>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y,Mode=TwoWay}"/>
                    <!--<Setter Property="Canvas.Top" Value="{Binding Y, Converter={StaticResource math}, ConverterParameter='500-x', Mode=TwoWay}"/>-->
                    <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>-->
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid x:Name="Grid1">
                        <Button Command="{Binding Command}"   Height="{Binding Size}"    Width="{Binding Size}" >
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="{Binding Size}"/>
                                </Style>
                            </Button.Resources>
                            <ItemsControl>


                                <ItemsControl>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <local:FadeControl Height="10" Width="10" Color="Green">
                                        <i:Interaction.Behaviors>
                                            <local:PropertyEventToCommandBehavior/>
                                        </i:Interaction.Behaviors>
                                    </local:FadeControl>

                                    <local:FadeControl Height="10" Width="10" >
                                        <i:Interaction.Behaviors>
                                            <local:PropertyEventToCommandBehavior>
                                                <local:PropertyEventToCommandBehavior.Properties>
                                                    <x:Array Type="sys:String">
                                                        <sys:String>IsValid</sys:String>
                                                    </x:Array>
                                                </local:PropertyEventToCommandBehavior.Properties>
                                            </local:PropertyEventToCommandBehavior>
                                        </i:Interaction.Behaviors>
                                    </local:FadeControl>
                                    
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Key}"></ContentPresenter>

                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Object}"></ContentPresenter>
                                    <!--CanValueBeNull="{Binding CanValueBeNull}"-->

                                    <!--<numeric:SpinnerDecorator>
                                <numeric:DoubleBox Value="{Binding Size,  ValidatesOnNotifyDataErrors=True}"                    
                       ValidationTrigger="PropertyChanged"
                       MaxValue="1000"
                       MinValue="0"
                       NumberStyles="AllowDecimalPoint,AllowLeadingSign"
                       RegexPattern="\1\d+(\.2\d+)"
                       StringFormat="N2"
                       AllowSpinners="True"
                       SpinUpdateMode="PropertyChanged"
                       Increment="10"/>
                            </numeric:SpinnerDecorator>-->
                                </ItemsControl>

                                <ItemsControl Visibility="{Binding CanChange,Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <numeric:SpinnerDecorator>
                                        <numeric:DoubleBox Value="{Binding X,  Mode=TwoWay}"                    
    
                       MaxValue="1000"
                       MinValue="0"
                    
                   SpinUpdateMode="PropertyChanged"
                       StringFormat="N2"
                       AllowSpinners="True"
                  
                       Increment="10"/>
                                    </numeric:SpinnerDecorator>
                                    <numeric:SpinnerDecorator>
                                        <numeric:DoubleBox Value="{Binding Y}"                    
                      
                       MaxValue="1000"
                       MinValue="0"
                    
                       StringFormat="N2"
                       AllowSpinners="True"
                       SpinUpdateMode="PropertyChanged"
                       Increment="10"/>
                                    </numeric:SpinnerDecorator>
                                </ItemsControl>
                            </ItemsControl>
                        </Button>



                        <Thumb x:Name="Thumb1" VerticalAlignment="Top" HorizontalAlignment="Right" Template="{StaticResource MoveTemplate}"
                                     Height="{Binding Size, Converter={StaticResource math}, ConverterParameter=x/4}"
                                     Width="{Binding Size, Converter={StaticResource math}, ConverterParameter=x/4}"
                            IsEnabled="{Binding CanChange,Converter={StaticResource BooleanToVisibilityConverter}}"
                               Visibility="{Binding ElementName=Grid1, Path=IsMouseOver, 
                            Converter={StaticResource BooleanToVisibilityConverter}}">


                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragDelta">
                                    <local:EventCommandExecuter Command="{Binding DragCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </Thumb>
                        <Thumb x:Name="Thumb2" VerticalAlignment="Bottom" 
                               Height="{Binding Size, Converter={StaticResource math}, ConverterParameter=x/4}"
                                     Width="{Binding Size, Converter={StaticResource math}, ConverterParameter=x/4}"
                               HorizontalAlignment="Left" 
                               Template="{StaticResource ReSizeTemplate}"
                            IsEnabled="{Binding CanChange,Converter={StaticResource BooleanToVisibilityConverter}}"
                               Visibility="{Binding ElementName=Grid1, Path=IsMouseOver, 
                            Converter={StaticResource BooleanToVisibilityConverter}}">


                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragDelta">
                                    <local:EventCommandExecuter Command="{Binding ReSizeCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </Thumb>
                    </Grid>
                    <DataTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding IsDraggable}" Value="False">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>-->
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDraggable" Value="False" >
                <Setter Property="ItemTemplate">
                    <Setter.Value>

                        <DataTemplate>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding Command}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Ellipse x:Name="Ellipse1" Width="{Binding Size}" Height="{Binding Size}"  Fill="Gray" Visibility="{Binding }"/>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Object}"></ContentPresenter>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type local:FadeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FadeControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Ellipse Name="PART_Ellipse" Fill="Red"></Ellipse>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>