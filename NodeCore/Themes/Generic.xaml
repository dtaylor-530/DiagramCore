<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:math="http://hexinnovation.com/math"
                  
                    xmlns:local="clr-namespace:NodeCore"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <ControlTemplate x:Key="ThumbTemplate">
        <Grid>
            <Ellipse Width="30" Height="30"   Fill="SlateGray"></Ellipse>
            <Ellipse Width="25" Height="25"   Fill="White"></Ellipse>
            
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                 Width="24" Height="24">
                <Path Fill="Black"
                    Data="M13,11H18L16.5,9.5L17.92,8.08L21.84,12L17.92,15.92L16.5,14.5L18,13H13V18L14.5,16.5L15.92,17.92L12,21.84L8.08,17.92L9.5,16.5L11,18V13H6L7.5,14.5L6.08,15.92L2.16,12L6.08,8.08L7.5,9.5L6,11H11V6L9.5,7.5L8.08,6.08L12,2.16L15.92,6.08L14.5,7.5L13,6V11Z" />
            </Canvas>
            <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Medium">Node</TextBlock>-->
       
        </Grid>
    </ControlTemplate>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <math:MathConverter x:Key="math" />
    
    <Style  TargetType="local:NodesControl" BasedOn="{StaticResource {x:Type ItemsControl}}">

        <Setter Property="ClipToBounds" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas  IsItemsHost="True"
                           >
                        <!--<Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="" CenterX=".5" CenterY=".5" />
                            </TransformGroup>
                        </Canvas.RenderTransform>-->
                    </Canvas>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y,Mode=TwoWay}"/>
                    <!--<Setter Property="Canvas.Top" Value="{Binding Y, Converter={StaticResource math}, ConverterParameter='500-x', Mode=TwoWay}"/>-->
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>-->
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid x:Name="Grid1">
 
         
        
                            <Button Command="{Binding Command}"   Height="{Binding Size}"    Width="{Binding Size}" >
                                <Button.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="60"/>
                                    </Style>
                                </Button.Resources>
                                <!--<Ellipse  x:Name="Ellipse1" Width="{Binding Size}" Height="{Binding Size}"  Fill="Gray" Visibility="{Binding }">
                                </Ellipse>-->
                            </Button>
                     
                        
                     
                  
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Object}"></ContentPresenter>
                        <Thumb x:Name="Thumb1" VerticalAlignment="Top" HorizontalAlignment="Right" Template="{StaticResource ThumbTemplate}"
                                  
                               Visibility="{Binding ElementName=Grid1, Path=IsMouseOver, 
                            Converter={StaticResource BooleanToVisibilityConverter}}">


                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragDelta">
                                    <local:EventCommandExecuter Command="{Binding DragCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </Thumb>

                    </Grid>
                    <DataTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding IsDraggable}" Value="False">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>-->
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDraggable" Value="False" >
                <Setter Property="ItemTemplate">
                    <Setter.Value>

                        <DataTemplate>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction Command="{Binding Command}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <Ellipse x:Name="Ellipse1" Width="{Binding Size}" Height="{Binding Size}"  Fill="Gray" Visibility="{Binding }"/>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Object}"></ContentPresenter>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>


</ResourceDictionary>